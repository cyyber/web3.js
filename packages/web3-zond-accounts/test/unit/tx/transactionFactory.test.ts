/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
import { hexToBytes } from '@theqrl/web3-utils';
import { Chain, Common, Hardfork } from '../../../src/common';

import {
	AccessListEIP2930Transaction,
	FeeMarketEIP1559Transaction,
	Transaction,
	TransactionFactory,
} from '../../../src';

const common = new Common({
	chain: Chain.Mainnet,
	hardfork: Hardfork.London,
});

const secretKey = hexToBytes('');
const publicKey = hexToBytes('70c89ad9f426a06f6039eaafda70942e115ad7c03105e62032cb943029819da7a7f70ee6adc76e3a98c6a94f1f81939ac93f68dc6b18cdb589015f9df335ddf5fbe619edd232b682b18f3058112e1e6b61a2c4b9c1a0f74fee1e219617165a7571799a2645a0cad786313e1a256750acaaf9c6df99460162db5da4be0fe9db6ec36837f9e8df74bbb6194892f5f8d3b8edeb3b9bc597d3851a07842f5d46165df78eed6eea32d5b70d3df27ec4e98c578c7dd94ea5f393f6aa43b9eca412671b52b9222c95ce5dfaef4366370b78ed9d4ed788d47ed5ea4cdad63d82aa3c3269648e64741b7badda7a144cf7cd3fad793e700573b590bd4ff82a9b1842cd86dbb27a238f02b7e012d1609c1a0daa5e155cde293592a1eb0b76ba3e30daab7851de16cfd04ca92efa5d125eb30819a65537d005d0ba6253a187d2a12c4d8368e95acf74f65ed5fe797fb13171e49877fb2a1f5e022918ab2139fae8cd970e3ae62a68aa2e1761ac7ec77c89ab8720f1940979ffbf2396526a3d8a1a16e0bcc23d605b43acadf2ae169e1954a87f48f7a7fcac1a60b70e13525eb133090a0322fa46e482679c1bc1d16a62b591caf37159b726b395749d5fcc3bf157c6bd6701591c8e2ae7d0762ba801367be2a001bfdd99e60c598ccb7cf6e0c7bc41264b268068758b9d0d70d7a3a1a340b95b0e28bbebf2fb4c88a4a4afbd473722319d02d658f8085b8d3d61a7a3994e16cafdfcc962afc1ad3aeeb99b7b5007f78c869cb5826fe474683be69756885682a85713d5ab1e961478d018619e559eb825f9b5038c843b1cb52826067bba53d17e3dcdb3d2bceade05be74a1211dbb45f25c63fbf21d4cfc939feede8b3701522c65cff351336e6b79c56182c4fb84db7f011a1f9c93f626128064cb3197eddd03035fb84fdb7b819668270502013b183a527e1295110b37ba9a7bbb8f72da499549a3c02fc8849226353ea2ae3423e8d3ccc6f43a4352baca6347c6fa5a11bf65877dd8a890ddead5a8116a2068aa4409e459f8d9f96b6c9dfecc64dcfc47061e9e2ceaaf17510de01450975d53017b5b3053dfc5b7b85e6a42107c10e7bfe9a492395451211a746b1daeef322227df21b59fecff66694f022d9efc078cebef1ab149837c8428172cec2ebe46459faa5212b6a41ef5df4866b94075e79dc12e01850b1ef1d3235cca329828d44c45cf374bf74cd3a72bdb809aba1b553719bd981e7a9dd9122ea59acc119228716b786d597a5a57b70cf624e84153a3cb38bb32cce797cd6a3d1b46daa9c64004a169df66aa5e4a74d2d4f6ffb999865238674438b4859fa7afa05192ea6bad91f472c8a801c73bc1acd93e22c746d79d0e601a0fc200269a99715b8bc506c746abc7e07df882f27d8e4d9f52b276d74f4630a25c7248bfa2d8ef91f7f75f870fcb7efb63ad4313cd6aa9c8675460121b2fdfa098c3fae44d099d2dfda28418171aac84e25e5d16ba5c9bb783a9060986f2426b40a22b9816cbba7819cbf613c61cf7dbc082ea7f00deeab9b0466ed9aaadba6829e0ed17e9d3f9e233c448f8d4a8a6c6230d1bf64a52c6e20a5e2e8ef06f0a4cc530a4992fea67b75583c66848215e8971093f13ea586f8976abc7dd1fbc7aea8685ff0e10d7291453b83ace4b50b38a91b768efc05a37223eef5b2c6fa09cc6b607348cc5f2572d09cc4142f3db35c50f3faa11bf5822f12886f929c6318c634cee7aad539e0c188fa63008c1f67d3c4a10a791ff567d7f4055200994b058af5859bc77ddc77865e6ad9063e341cc71b846b27677c827b70982792d7c34d0fbecc5b9356c61964fb3444851b8fa72b94fba7a26b9b0be2f7a0d9f1aba832ab54a61598070a222961855cee2899f7060194ac244de75df0c1b420ff8f4ec4c3e085b3055d96028e836ed9d0d9884ae819c919dca7054f1675c06c73551f8fd48496e333903824bc7714abfec16729c4f7b1e8b4bbda43fbd17f5b077a2898031ac74b62fe2ee71507401f076fa1b3a2e4530735f42e3f009c4367aec629e43664bb2b3c802f963e545b36436003dbccb3015741f8e954d7f4fe1b6462a3319220c028a662ce8e41783d3cda1d76cce69f46f9a7a944daedb36c13c86c72567f84fc2b06a03fded8f28952f88ae15bd098980111fc134cb50f206f587ec24e3150a36793346ed936c164d89fe5e3acb0cc8d6100d3c21c06d3c51fad8c53ce150f6def7f8421d3b26733f037c3347a84226cfa218f163988220dbdb83fb05d8bab4ee76bb3fddce31b3e731dd3bf34bf87d6333157e1df0ff784f390e4762a1056e9afe82d385b8800cda51329681837148ce564553f51b6b2150ef589af8762fcb3de90734540757dee6ca7b7430d8b8baa3531ce3ae885a9327961a1688eb476fc66409d235bd78a92d4fd7fbf882d6de0417daa0b45bc7e650984b0430e94943b292b47329ed79299a9fce2293430077caf2aeb0e0c5ac3036a650568ed087c4d20a62ef31d109e6027031313bc34e4b4c2a3bc9927ad119ea0ddddaf75448fe29237ec757560440bc1337d3704bef265fb3b131dc63012f4717314451b6de8ead2490a00c2da7aa72f07aa4370a177bf20e81794922dae06014c26f344c783647ece59defcbdc75cef2f86c1452497f9bf29d3b80faff2551a768cd8cac896b57f7e16f85a50695f29570d186c2729d694f6d71a729a6317d2bdf43e6a4a279fb2ec52ce3f38c4942f10713c51c78ef2f440124f870c79e6e5273cb6f725d1ee8e64f0d366c0ec886b75b3b01d8b2a5ecc78c9f46709b98d3a3bb3b650edfb77e8eea6ef6303ec49d75bf9270edb100b4ba67e5436b0651185b4392d763b73743868d2911a66fe6e9affe443a0d911ca5966003331d2f40ea2ba99242f448c4138f56b304ba77b1a333cfdba20dbabe8655488e55cbe6c8d4cb367bc5fbf0e1928e8d863e27e47cfbb736b9819d1b65e2b351391e85296a33a29fa34de28a511a14e78c829af3c88d867afd7a654c9c17b2d37dbe11c208935a3349f6046b06106e63998f9fa19283b210a8105506a1f356192f28811ff9caf250b18b61b994252b2b30e37b9ae908f975d7e95f36abe3f5ea86ff699c2933ff3badec2589b0af3637d74d00539ea3084e9ba2f1735d3be70d2729801586a3a3765d533d9e7b2ba2338c9480effbc55c986a10ac358d3c29e3b3d995a13de49d670f6bd2ea644ab921536f8c2f0b88e63a58dca6f637ef1fae39a1a43c1c9c745f236e10250dc65f9a0261a7e3554bb693d7e3a351a080a33ec5c027b21fb3299b760a03da171cacdd05b67b2cf750dc9009db659e7222904f52406d8e001045fabc4f006611fa02b8cd0c1ae2d6f19d03f05d0d1c7f98f92a95275b2d07633de4c9924cc84206904392b7f0b10b045212435a6e9cae7d9708b86dbe2bc7e80aef7e43cdc3ecd70331d6de9ef0daa3e0794e6cd3000115c978e77934f85d4dc3adb364f4265fe20ca19990ec6975f44e25ae38acc89c14966858d2859501dfadcc09f599a0987eadf68b1e8d9068d0a66724bc8f79f497fee2867c7638cc902263145cc74ec2ef251480093d9876bac78afbb72fc094ba16e2f44be6c412c27d93891f707558d6636dbb00dbf34dba1ad3b01cb545351e84');

const unsignedTx = Transaction.fromTxData({});
const signedTx = unsignedTx.sign(secretKey, publicKey);

const unsignedEIP2930Tx = AccessListEIP2930Transaction.fromTxData(
	{ chainId: BigInt(1) },
	{ common },
);
const signedEIP2930Tx = unsignedEIP2930Tx.sign(secretKey, publicKey);

const unsignedEIP1559Tx = FeeMarketEIP1559Transaction.fromTxData(
	{ chainId: BigInt(1) },
	{ common },
);
const signedEIP1559Tx = unsignedEIP1559Tx.sign(secretKey, publicKey);

const txTypes = [
	{
		class: Transaction,
		name: 'Transaction',
		unsigned: unsignedTx,
		signed: signedTx,
		eip2718: false,
		type: 0,
	},
	{
		class: AccessListEIP2930Transaction,
		name: 'AccessListEIP2930Transaction',
		unsigned: unsignedEIP2930Tx,
		signed: signedEIP2930Tx,
		eip2718: true,
		type: 1,
	},
	{
		class: FeeMarketEIP1559Transaction,
		name: 'FeeMarketEIP1559Transaction',
		unsigned: unsignedEIP1559Tx,
		signed: signedEIP1559Tx,
		eip2718: true,
		type: 2,
	},
];

describe('[TransactionFactory]: Basic functions', () => {
	it('fromSerializedData() -> success cases', () => {
		for (const txType of txTypes) {
			const serialized = txType.unsigned.serialize();
			const factoryTx = TransactionFactory.fromSerializedData(serialized, { common });
			expect(factoryTx.constructor.name).toEqual(txType.class.name);
		}
	});

	it('fromSerializedData() -> error cases', () => {
		for (const txType of txTypes) {
			if (!txType.eip2718) {
				continue;
			}
			const unsupportedCommon = new Common({
				chain: Chain.Mainnet,
				hardfork: Hardfork.Istanbul,
			});
			expect(() => {
				TransactionFactory.fromSerializedData(txType.unsigned.serialize(), {
					common: unsupportedCommon,
				});
			}).toThrow();

			expect(() => {
				const serialized = txType.unsigned.serialize();
				serialized[0] = 99; // edit the transaction type
				TransactionFactory.fromSerializedData(serialized, { common });
			}).toThrow();
		}
	});

	it('fromBlockBodyData() -> success cases', () => {
		for (const txType of txTypes) {
			let rawTx;
			if (txType.eip2718) {
				rawTx = txType.signed.serialize();
			} else {
				rawTx = txType.signed.raw() as Uint8Array[];
			}
			const tx = TransactionFactory.fromBlockBodyData(rawTx, { common });
			expect(tx.constructor.name).toEqual(txType.name);
			expect(txType.eip2718 ? tx.serialize() : tx.raw()).toEqual(rawTx);
		}
	});

	it('fromTxData() -> success cases', () => {
		for (const txType of txTypes) {
			const tx = TransactionFactory.fromTxData({ type: txType.type }, { common });
			expect(tx.constructor.name).toEqual(txType.class.name);
			if (txType.eip2718) {
				continue;
			}
			const _tx = TransactionFactory.fromTxData({});
			expect(_tx.constructor.name).toEqual(txType.class.name);
		}
	});

	it('fromTxData() -> error cases', () => {
		const unsupportedCommon = new Common({ chain: Chain.Mainnet, hardfork: Hardfork.Istanbul });
		expect(() => {
			TransactionFactory.fromTxData({ type: 1 }, { common: unsupportedCommon });
		}).toThrow();

		expect(() => {
			TransactionFactory.fromTxData({ type: 999 });
		}).toThrow();

		expect(() => {
			TransactionFactory.fromTxData({ value: BigInt('-100') });
		}).toThrow();
	});
});
